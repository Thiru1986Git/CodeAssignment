/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 28 14:52:59 GMT 2018
 */

package com.cts.application.model.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cts.application.model.xml.Record;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Record_ESTest extends Record_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      record0.setStartBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getStartBalance();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      record0.setStartBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getStartBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      record0.setStartBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getStartBalance();
      assertEquals((byte) (-1), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Record record0 = new Record();
      Integer integer0 = new Integer(0);
      record0.setReference(integer0);
      Integer integer1 = record0.getReference();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Record record0 = new Record();
      Integer integer0 = new Integer(1298);
      record0.setReference(integer0);
      Integer integer1 = record0.getReference();
      assertEquals(1298, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Record record0 = new Record();
      Integer integer0 = new Integer((-1303));
      record0.setReference(integer0);
      Integer integer1 = record0.getReference();
      assertEquals((-1303), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      record0.setMutation(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getMutation();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Record record0 = new Record();
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      record0.setMutation(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getMutation();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      record0.setMutation(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getMutation();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      record0.setEndBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getEndBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = new BigDecimal((-3200L));
      record0.setEndBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getEndBalance();
      assertEquals((short) (-3200), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Record record0 = new Record();
      record0.setDescription("5mZzy\"FR}\"yG#.");
      String string0 = record0.getDescription();
      assertEquals("5mZzy\"FR}\"yG#.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Record record0 = new Record();
      record0.setDescription("");
      String string0 = record0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Record record0 = new Record();
      record0.setAccountNumber("");
      String string0 = record0.getAccountNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = record0.getStartBalance();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Record record0 = new Record();
      String string0 = record0.toString();
      assertEquals("Customer Statement Record: [Transaction Reference = null, Account Number = null, Description = null, Start Balance = null, Mutation = null, End Balance = null]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Record record0 = new Record();
      Integer integer0 = record0.getReference();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Record record0 = new Record();
      record0.setAccountNumber("Customer Statement Record: [Transaction Reference = null, Account Number = null, Description = null, Start Balance = null, Mutation = null, End Balance = null]");
      String string0 = record0.getAccountNumber();
      assertEquals("Customer Statement Record: [Transaction Reference = null, Account Number = null, Description = null, Start Balance = null, Mutation = null, End Balance = null]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = record0.getMutation();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Record record0 = new Record();
      String string0 = record0.getAccountNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      record0.setEndBalance(bigDecimal0);
      BigDecimal bigDecimal1 = record0.getEndBalance();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Record record0 = new Record();
      BigDecimal bigDecimal0 = record0.getEndBalance();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Record record0 = new Record();
      String string0 = record0.getDescription();
      assertNull(string0);
  }
}
